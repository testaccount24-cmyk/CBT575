SPSL     TITLE 'KB - JES2/SP OFFLOADED SPOOL SELECT UTILITY'
***********************************************************************
*                                                                     *
*                           SPOOLSEL                                  *
*                                                                     *
***********************************************************************
*                                                                     *
*  THE PROGRAM IS THE UTILITY SERVING THE JES2/SP SPOOL OFFLOADED     *
*                    DATA SET (DISK OR TAPE)                          *
*                                                                     *
*       WRITTEN BY  KRZYSZTOF (CHRIS) BYTNEROWICZ                     *
*                                                                     *
*       AMENDED BY THOMAS HUTCHINS - AGCO CORP.                       *
*                                                                     *
* PROGRAM EXECUTION:                                                  *
* ******************                                                  *
*                                                                     *
*  1. LIST MODE                                                       *
*     PROVIDING THE USER WITH THE LISTING OF THE JOBS OFFLOADED       *
*     GIVING THE INFORMATION ON JOBNAMES,JOBNUMBERS,CLASSES,          *
*     SUBMITTERS,NODES AND SO ON.IN CASE OF THE JOBS EXECUTED         *
*     THE NUMBER OF THE OUTPUT LINES IS GIVEN.                        *
*      THE MODE IS PROVIDED WITH SUBMODES ENABLING THE USER TO GET    *
*     MORE DETAILED INFORMATION ON THE JOBS OF PARTICULAR INTEREST.   *
*     THE SELECTION CONTROL CARDS ARE NECESSARY TO SPECIFY JOBS TO    *
*     BE REPORTED IN MORE DETAIL.THE SELECTION CONTROL CARDS          *
*     HAVE THE SAME LAYOUT AS DESCRIBED IN SELECT MODE.               *
*                                                                     *
*      SUBMODES ARE:                                                  *
*                                                                     *
*       SHOW - PROVIDING THE USER WITH THE LISTING OF N LINES OF      *
*              EVERY OUTPUT ELEMENT OF THE SELECTED JOBS.             *
*       DUMP - PROVIDING THE USER WITH THE DUMP OF N BLOCKS OF        *
*              EVERY OUTPUT ELEMENT OF THE SELECTED JOBS.             *
*              THE DUMP IS PRINTED IN HEXADECIMAL AND CHARACTER       *
*              FORM 32 BYTES OF DATA IN EVERY LINE.                   *
*                                                                     *
*               N IS SPECIFIED AS THE THIRD PARAMETER IN PARM FIELD   *
*              OR VALUE OF 20 IS ASSUMED BY DEFAULT                   *
*                                                                     *
*  2. HEX MODE                                                        *
*     SIMILAR TO LIST MODE BUT GIVING ADDITIONAL HEXADECIMAL          *
*     INFORMATION ON THE FORMAT OF BLOCK HEADERS AND FLAGS AS WELL    *
*     AS THE INFORMATION (OUTPUT CLASS AND NUMBER OF RECORDS)         *
*     ON INDIVIDUAL OUTPUTS ELEMENTS.                                 *
*                                                                     *
*  3. SELECT MODE                                                     *
*     PROVIDING THE USER WITH THE POSSIBILITY TO CREATE SUBSET        *
*     OF THE OFFLOADED SPOOL DATA SET BY SELECTING SOME JOBS AND      *
*     WRITING THEM TO THE OUTPUT DATA SET BEING LOADED BY JES2/SP     *
*     LATER.                                                          *
*      THE USER IS SUPPOSED TO PROVIDE PROGRAM WITH THE SELECTION     *
*     CONTROL CARDS.                                                  *
*                                                                     *
*  4. PRINT MODE                                                      *
*     PROVIDING THE USER WITH THE POSSIBILITY TO PRINT WITHOUT        *
*     LOADING ONTO THE SPOOL DATA SET THE OUTPUTS OF SPECIFIED        *
*     JOBS.                                                           *
*      THE PRINTOUTS ARE WRITTEN TO DYNAMICALLY ALLOCATED PRNT????    *
*     DATASETS.                                                       *
*      THE MODE SHOULD BE USED WITH CARE REGARDING DIFFERENT OUTPUT   *
*     OUTPUT CHARACTERISTICS OF THE SELECTED JOBS.                    *
*      THIS APPLIES TO OUTPUT CLASS SPECIFICATION, DIFFERENCES IN     *
*     UCS AND FCB SPECIFICATIONS AND PRINTING CONTROL CHARACTERS      *
*     SPECIFICATION.                                                  *
*      TO AVOID UNPROPER PRINTING RESULTS THE SELECTION SHOULD NOT    *
*     SPECIFY JOBS WITH UNLIKE OUTPUT CHARACTERISTICS.                *
*                                                                     *
*                                                                     *
* PROGRAM CONTROL:                                                    *
* ****************                                                    *
*                                                                     *
*  THE CONTROL OF THE PROGRAM EXECUTION IS PROVIDED BY THE PARM       *
*  INFORMATION SELECTING THE MODE OF THE OPERATION AND BY CONTROL     *
*  CARDS SPECIFYING THE SELECTION CONTROL DATA FOR SELECT,PRINT       *
*  MODES AND DUMP,SHOW SUBMODES OF LIST MODE.                         *
*                                                                     *
*                                                                     *
* PARM INFORMATION:                                                   *
* *****************                                                   *
*                                                                     *
*        LIST   - LIST THE CONTENTS OF THE SPOOL OFFLOAD DATA SET     *
*                                                                     *
*   : REMOVED SUB OPTIONS                                             *
*   :     SUBOPTIONS OF LIST:                                         *
*   :                                                                 *
*   :      DUMP - HEXADECIMAL DUMP OF THE SELECTED JOBS DATA WILL     *
*   :             BE PRINTED                                          *
*   :      SHOW - THE BEGINNING OF EACH SELECTED JOBS' ELEMENT        *
*   :             (20 RECORDS WILL BE PRINTED)                        *
*   : REMOVED SUB OPTIONS                                             *
*                                                                     *
*        HEX    - HEX PRINT OF BLOCKS HEADERS                         *
*                                                                     *
*        SELECT - SELECT THE REQUESTED JOBS CREATING SELECTIVE COPY   *
*                                                                     *
*        MERGE  - SELECT THE REQUESTED JOBS FROM CONCATENTED DATASETS *
*                 CREATING A SELECTIVE COPY. <DROP SUBSEQUENT NJE     *
*                 HEADER RECORDS AND ADJUST TIME&DATE STAMP>          *
*                                                                     *
*        PRINT  - PRINT THE SELECTED JOBS OUTPUTS ONTO PRINTOUT       *
*                 DATA SET                                            *
*                                                                     *
*     ABSENCE OF THE PARM FIELD IMPLIES LIST OPTION ONLY.             *
*                                                                     *
* DD STATEMENTS:                                                      *
* **************                                                      *
*                                                                     *
*  SYSUT1   - DEFINING INPUT DATA SET,   (OFFLOADED SPOOL DATA SET)   *
*             MANDATORY IN ALL MODES.                                 *
*  SYSPRINT - DEFINING PRINTOUT DATA SET,(MESSAGES AND LIST INFO)     *
*             MANDATORY IN ALL MODES.                                 *
*  PRINTOUT - DEFINING PRINTOUT DATA SET WHICH WILL RECEIVE SELECTED  *
*             JOBS OUTPUTS IN PRINT MODE.                             *
*  SYSIN    - DEFINING INPUT DATA SET,   (SELECT CONTROL CARDS)       *
*             MANDATORY IN SELECT,PRINT AND LIST SUBMODES(SHOW,DUMP)  *
*  SYSUT2   - DEFINING OUTPUT DATA SET,  (OFFLOADED SPOOL SUB-SET)    *
*             MANDATORY IN SELECT MODE.                               *
*                                                                     *
* CONTROL CARDS:                                                      *
* **************                                                      *
*                                                                     *
*     LIST OF SELECTION CRITERIONS IS TO BE PROVIDED VIA INPUT        *
*   DEFINED WITH SYSIN DD STATEMENT.PARTS OF THE INPUT FILE DEFINED   *
*   WITH SYSUT1 WILL BE SELECTIVELY COPIED TO THE OUTPUT FILE         *
*   DEFINED WITH SYSUT2 DD STATEMENT.TIHS OUTPUT FILE CAN BE LATER    *
*   LOADED BY THE JES2/SP SPOOL LOAD FUNCTION ($SLODN COMMAND).       *
*                                                                     *
*     THE SELECTION CONTROL DATA SHOULD BE CODED LIKE:                *
*                                                                     *
*    COLS                                                             *
*    01-08    10-14                                                   *
*    JOBNAME  J9999                                                   *
*    JOBNAME  OUT=OUTCLASS                                            *
*    *PREFIX                                                          *
*    Â¢CLASS                                                           *
*                                                                     *
*    WHERE:                                                           *
*    JOBNAME DENOTES THE JOBNAME OF THE JOB/JOBS TO BE SELECTED,      *
*    JOBNAME 'OUTPUTS' DENOTES THAT ALL JOBS WAITING FOR OUTPUT       *
*    ARE TO BE SELECTED.                                              *
*    JOBNAME 'INPUTS' DENOTES THAT ALL JOBS WAITING FOR PROCESSING    *
*    ARE TO BE SELECTED.                                              *
*     IF JOBNUMBER FIELD CONTAINS TEXT OUT=OUTCLASS IT SPECIFIES      *
*    THE OUTPUT OF THE GIVEN OUTPUT CLASS FOR THE SPECIFIED JOB IS    *
*    TO BE SELECTED. THE SAME APPLIES TO THE JOBS DEFINED WITH        *
*    JOBNAME 'OUTPUTS'.                                               *
*     IF JOBNUMBER (COLS 10-14) IS OMITTED THE FIRST OR ONLY          *
*    OCCURENCE OF THE SPECIFIED JOB WILL BE TAKEN INTO ACCOUNT.       *
*     IF JOBNAME IS OMITTED ONLY THE JOB WITH THE GIVEN NUMBER WILL   *
*    BE SELECTED.                                                     *
*     JOBNAME CODED AS 'ALL' WILL CAUSE ALL THE JOBS WITH THE GIVEN   *
*    NAME OR CHARACTERISTICS (INPUTS OR OUTPUTS) TO BE SELECTED.      *
*                                                                     *
*     CONTROL CARD STARTING WITH * WILL DIRECT THE PROGRAM TO SELECT  *
*    ALL THE JOBS WHOSE JOBNAMES START WITH CHARACTERS SPECIFIED      *
*    IN COLUMNS 2-8.                                                  *
*                                                                     *
*     CONTROL CARD STARTING WITH Â¢ WILL DIRECT THE PROGRAM TO SELECT  *
*    ALL THE JOBS INTENDED TO BE EXECUTED IN THE CLASS SPECIFIED      *
*    IN COLUMN 2.                                                     *
*                                                                     *
*    SO:                                                              *
*                                                                     *
*    0        1                                                       *
*    12345678901234                                                   *
*                                                                     *
*    OUTPUTS  ALL          ALL JOB WAITING FOR OUTPUT                 *
*    OUTPUTS  OUT=D        ALL OUTPUTS IN OUTPUT CLASS D              *
*    INPUTS   ALL          ALL JOBS READY FOR EXECUTION               *
*    JOBNAME               1-ST JOB WITH THE GIVEN JOBNAME            *
*    JOBNAME  JNNNN        ONLY THE JOBNAME WITH THE GIVEN JOBNUMBER  *
*    JOBNAME  ALL          ALL JOBS WITH THE GIVEN NAME               *
*    JOBNAME  OUT=X        OUTPUT IN OUTPUT CLASS X FOR JOBS WITH THE *
*                          GIVEN JOBNAME                              *
*             JNNNN        JOB WITH THE GIVEN JOBNUMBER               *
*             NNNN         JOB WITH THE GIVEN JOBNUMBER               *
*    *JOBPRF               ALL JOBS WITH THE PREFIX (1-7 CHARS)       *
*    Â¢CLASS                ALL JOBS FROM THE GIVEN CLASS              *
*                                                                     *
*    ARE THE VALID COMBINATIONS OF THE SELECTION CONTROL CARDS TAKING *
*    INTO ACCOUNT THAT ONLY DETAILED OR GENERAL SELECTION CARDS CAN   *
*    BE USED IN THE SINGLE RUN OF THE PROGRAM.                        *
*     THE GENERAL CONTROL CARDS (INPUTS OR OUTPUTS) EXCLUDE EACH      *
*    OTHER AND THE FIRST VALID WILL BE CONSIDERED.                    *
*                                                                     *
* RETURN CODES:                                                       *
* *************                                                       *
*                                                                     *
*   00 - NO ERROR CONDITIONS DETECTED                                 *
*   04 - SYSPRINT DD CARD NOT SPECIFIED/OPEN FAILED                   *
*   08 - WRONG PARAMETERS/CONTROL CARDS                               *
*   12 - SYSIN/SYSPRINT DD CARD NOT SPECIFIED                         *
*                                                                     *
* MESSAGES:                                                           *
* *********                                                           *
*                                                                     *
*    THE MESSAGES ISSUED BY THE PROGRAM ARE SELF EXPLANATORY          *
*                                                                     *
* JCL PROCEDURES:                                                     *
* ***************                                                     *
*                                                                     *
*    THERE ARE TWO JCL PROCEDURES PLACED IN SYS1.PROCLIB INTENDED     *
*   TO EXECUTE THE PROGRAM:                                           *
*                                                                     *
*    - SPOOLIST - EXECUTING THE LIST MODE,                            *
*    - SPOOLSEL - EXECUTING THE SELECT MODE.                          *
*                                                                     *
*   THE PROCEDURES HAVE THE SYMBOLIC PARAMETERS USED TO FACILITATE    *
*   THE USE OF THE PROGRAM:                                           *
*                                                                     *
*    &IDS - INPUT DATA SET NAME;   STANDARD IDS='GCC3.SPUNL.T01'      *
*    &ODS - OUTPUT DATA SET NAME;  STANDARD IDS='GCC1.SPUNL.D01'      *
*    &SOUT- SYSPRINT OUTPUT CLASS; STANDARD SOUT=S                    *
*                                                                     *
* LIBRARY:                                                            *
* ********                                                            *
*                                                                     *
*    THE PRODUCTION VERSION OF THE PROGRAM IS PLACED IN               *
*   ZTSDKJB.MVS03.PGMLIB UNDER THE NAME SPOOLSEL AND IS REFERRED TO   *
*   BY MENTIONED JCL PROCEDURES.                                      *
*                                                                     *
*                                                                     *
*  SUMMARY OF CHANGES                                                 *
*  ******************                                                 *
*                                                                     *
* 12/10/83 NAME CHANGED TO SPOOLSEL                                   *
* 18/10/83 JOBNAME PREFIX AND CLASS SELECT ADDED                      *
* 20/10/83 DETAILED SELECTION TO BE CHECKED AFTER CLASS/PREFIX        *
* 26/10/83 OUTPUT CLASS PRINTING IN HEX MODE                          *
* 29/10/83 OUTPUT CLASS SELECTION FOR JOB/OUTPUTS                     *
*                                                                     *
*  VERSION 2                                                          *
*  *********                                                          *
* 17/07/84 DUMP AND SHOW SUBFUNCTIONS OF LIST INTRODUCED              *
* 21/07/84 PRINT MODE INTRODUCED                                      *
* 25/07/84 NUMBER OF BLOCKS TO BE DUMPED/LINES TO BE SHOWN INTRODUCED *
* 30/07/84 PARM FIELD REPLICA TO SYSPRINT INTRODUCED                  *
*                                                                     *
*  VERSION 3                                                          *
*  *********                                                          *
* 17/06/88 JES2/SP 1.3.6 AND 2.2.0 SUPPORT ADDED                      *
* 27/02/89 UNPRINTABLE JOB CLASS (SYSLOG,TSU) REPLACED WITH *         *
*                                                                     *
*  VERSION 4                                                          *
*  *********                                                          *
* 99.06.21 THOMAS HUTCHINS AGCO CORP                                  *
*          OS/390 2.4 JES2 SUPPORT                                    *
*          REMOVED LIST SUB OPTIONS: "DRUB" MODULE WAS NOT SUPPLIED   *
*          RE-WROTE "PRIDU" PRINT MODE ROUTINE TO CORRECTLY PROCESS   *
*            NJE RECORD                                               *
*          PRINT OPTION DYNAMICALLY ALLOCATES SYSOUT FILES;           *
*            A NEW PRINT FILE IS CREATED FOR EACH REQUESTED JOB       *
*          **> KNOWN PROBLEMS <**                                     *
*              1. RECORD COUNT FOR EACH JOB LISTED IS OFF             *
*              2. HEX MODE GIVES GARBAGE BEFORE LISTING OF HEADER     *
*                 STRING.                                             *
*                                                                     *
*  VERSION 5                                                          *
*  *********                                                          *
* 99.07.14 THOMAS HUTCHINS AGCO CORP                                  *
*          REMOVED NECESSITY FOR JES2 SUPPORT                         *
*          ADDED SUPPORT FOR MERGING NJE DATASETS                     *
*          ALL MODES TAKING TOTAL JOB RECORD COUNT FROM JOB TRAILER   *
*                                                                     *
***********************************************************************
         EJECT
         PRINT GEN
         EJECT
SPOOLSEL CSECT
         SAVE  (14,12),,*                 STANDARD LINKAGE
         LR    R12,R15
         USING SPOOLSEL,R12,R6
         LA    R6,1
         LA    R6,4095(R12,R6)
         ST    R1,APAR
         LA    R4,SAVEAREA
         ST    R13,4(R4)
         ST    R4,8(R13)
         LR    R13,R4
         DC    X'4700'
PGMVER   DC    AL2(5)              PROGRAM VERSION
START    DS    0H
         MVC   LISTR(DK203),PK203
         MVC   LISTR+DK203(3),=C' V='
         PISZ  VPISZ1,PGMVER,DK203+3+LISTR,L=4,FD=H
         OPEN  (PRINT,(OUTPUT))
         TM    PRINT+DCBOFLGS,X'10'
         BZ    NOPRT
         DRUKUJ VTD,R=LISTR1,L=DK203+14
         DRUKUJ VTD,R=LISTR1,L=6   EMPTY LINE
* CHECK IF THE PARM FIELD WAS SPECIFIED
         L     R1,APAR             PARMFIELD POINTER
         L     R1,0(R1)            1-ST ADDRESS
         LH    R2,0(R1)            LENGTH
         LTR   R2,R2               WAS IT SPECIEFIED
         BZ    NOPAR               NO
         OI    FLGS,FLGS#PRM       PRESENT
         XC    NUSPEC,NUSPEC       NUMBER OF BLOCKS/RECORDS
* PRINT THE PARM FIELD REPLICA
         MVC   LISTR(DK200),PK200
         BCTR  R2,0                REDUCE BY 1
         STC   R2,*+5
         MVC   LISTR+DK200(0),2(R1)
         LA    R3,7+DK200(R2)            LENGTH OF OUTPUT
         DRUKUJ VTD,R=LISTR1,L=(R3)
         DRUKUJ VTD,R=LISTR1,L=6   EMPTY LINE
         L     R1,APAR             PARMFIELD POINTER
         L     R1,0(R1)            1-ST ADDRESS
         LH    R2,0(R1)            LENGTH
         BAL   R10,PARANA          PARM ANALYZIS
* WAS THE SELECT OPTION SPECIFIED
         TM    FLGS,FLGS#SEL
         BZ    NOPAR               NO
         LA    R2,=CL8'SYSIN'
         DDENT (R2)
         LTR   R1,R1
         BZ    NODDNA              NOT SPECIFIED
* SYSUT2 NOT NEEDED WHEN PRINT REQUESTED
         TM    FLGS+1,FLGS#SDP    ANY PRINT SELECT
         BNZ   NOSUT2
         OPEN  (OUTDCB,(OUTPUT))
         TM    OUTDCB+DCBOFLGS,X'10'
         BZ    NOPEN
         LA    R2,=CL8'SYSUT2'
         DDENT (R2)
         LTR   R1,R1
         BZ    NODDNA              NOT SPECIFIED
* SET UP THE MAIN STORAGE FOR JOBS TO BE SELECTED
NOSUT2   DS    0H
         OPEN  SYSIN
         TM    SYSIN+DCBOFLGS,X'10'
         BZ    NOPEN
         LA    R0,SEL#QTY*SEL#LEN
         GETMAIN R,LV=(0)
         STM   R0,R1,GT#SEL
         BAL   R10,RDCTLC          READ CONTROL CARDS
NOPAR    DS    0H
* COMPUTE THE QUANTITY OF STORAGE NEEDED DEPENDING ON OPTIONS
         LA    R2,BLKL             LENGTH OF THE I/O BLOCK
         TM    FLGS,FLGS#SEL
         BZ    *+6
         AR    R2,R2               DISTANCE BETWEEN PAIRS
         LR    R0,R2
         AR    R0,R0               MULTIPLY BY 2
* GET STORAGE FOR I/O BLOCKS
         GETMAIN R,LV=(0)
* DIVIDE THE STORAGE AMONG BUFFER PAIRS FOR READ/WRITE
         LR    R8,R1
         LR    R9,R8
         AR    R9,R2               NEXT PAIR
         LR    R7,R0               QTY
         STM   R7,R9,GT#IOI
         SRA   R2,1                /2
* 1-ST PAIR
         ST    R8,B1               READ INITIAL BUFFER
         TM    FLGS,FLGS#SEL
         BZ    *+10
         AR    R8,R2
         ST    R8,B1+4             WRITE INITIAL BUFFER
* 2-ND PAIR
         ST    R9,B2               READ INITIAL BUFFER
         TM    FLGS,FLGS#SEL
         BZ    *+10
         AR    R9,R2
         ST    R9,B2+4             WRITE INITIAL BUFFER
         SPACE 5
LOOP0    DS    0H
         OPEN  INDCB
         TM    INDCB+DCBOFLGS,X'10'
         BZ    NOPEN
         MVC   LISTR(L'T1),T1
         DRUKUJ VTD,R=LISTR1,L=L'T1+6
         DRUKUJ VTD,R=LISTR1,L=6   EMPTY LINE
* CLEAR PRINT LINE
         MVI   LISTR-1,C' '
         MVC   LISTR(80),LISTR-1
* INITIAL READ OF NJE DATA
         L     R8,B1               1-ST PAIR OF BUFFERS
         L     R9,B2               2-ND PAIR OF BUFFERS
* INITIAL WRITE OF 80 BYTE NJE HEADER IF SELECTED
*   USE HEADER SUPPLIED ON INPUT DATASET
         TM    FLGS,FLGS#SEL       IS SELECT REQUESTED
         BZ    LOOP1               NO,SKIP IT
         TM    FLGS+1,FLGS#SDP     ANY PRINT SELECT
         BNZ   LOOP1               YES,SKIP IT
         READ  DECB1,SF,,(R8),MF=E
         CHECK DECB1
         MVC   VERSTAMP,4(R8)      SAVE VERIFICATION TIME/DATE STAMP
         TM    FLGS,FLGS#MRG       IS MERGE REQUESTED
         BZ    LOOP0A              NO,SKIP IT
* MERGE OPERATION SETS ITS OWN VERIFICATION TIME STAMP
         TIME  BIN                 GET CURRENT TIME & DATE
         STM   R0,R1,VERSTAMP      STOR IT AS VERIFICATION STAMP
         MVC   4(8,R8),VERSTAMP    NEW VERIFICATION TIME/DATE STAMP
LOOP0A   DS    0H
         MVC   SAVLR,OUTDCB+82     SAVE LRECL
         MVC   SAVBL,OUTDCB+62     SAVE BLOCK SIZE
         MVC   OUTDCB+62(2),=X'0050' 80 BYTE BLOCK LENGTH
         MVC   OUTDCB+82(2),=X'0050' 80 BYTE LRECL LENGTH
         MVI   20(R8),X'00'        CLEAR HEADER FIELDS
         MVC   21(59,R8),20(R8)
         WRITE DECB3,SF,,(R8),MF=E WRITE NEW HEADER RECORD
         CHECK DECB3
         MVC   OUTDCB+82(2),SAVLR  RESTORE LRECL
         MVC   OUTDCB+62(2),SAVBL  RESTORE BLOCK SIZE
LOOP1    DS    0H
         READ  DECB1,SF,,(R8),MF=E
         READ  DECB2,SF,,(R9),MF=E
LOOP     DS    0H
         CHECK DECB1
* UPDATE THE PHYSICAL BLOCK NUMBER
         L     R1,NURIN
         LA    R1,1(R1)
         ST    R1,NURIN
         NI    FLGB,X'FF'-FLGB#NJE RESET FLAG
         LR    R1,R8
         BAL   R10,BLKAN           BLOCK ANALYZIS
         TM    FLGS,FLGS#SEL       IS SELECT REQUIRED
         BZ    LOOP#1              NEXT BLOCK
         TM    FLGS+1,FLGS#PRT     PRINT SELECT
         BO    LOOP#W00            YES, CONTINUE
         TM    FLGB,FLGB#NJE       NJE HEADER FOUND
         BZ    LOOP#W00            NO, CONTINUE
         TM    FLGS,FLGS#MRG       IS MERGE REQUIRED
         BO    LOOP#1              YES, DROP IT
         MVC   LISTR+5(L'TE),TE
         DRUKUJ VTD,R=LISTR1,L=L'TE+11
         ABEND 203
LOOP#W00 DS    0H
         TM    FLGB,FLGB#JST       JOB STARTED
         BZ    LOOP#W10            NEXT BLOCK
         BAL   R10,SELCHK          CHECK THE SELECTION
         TM    FLGB,FLGB#SEL       TO BE SELECTED
         BZ    LOOP#W10            NO
         MVC   LISTR+5(L'TB),TB
         DRUKUJ VTD,R=LISTR1,L=L'TB+11
LOOP#W10 DS    0H
         TM    FLGB,FLGB#SEL       TO BE SELECTED
         BZ    LOOP#1              NO
* WAS THE PRINT OPTION SPECIFIED
         TM    FLGS+1,FLGS#SDP     ANY PRINT SELECT
         BZ    LOOP#W20
         LR    R1,R8               BLOCK ADDRESS
         BAL   R10,PRIDU           PRINT/DUMP BLOCK
         B     LOOP#1              NO
LOOP#W20 DS    0H
         TM    FLGB,FLGB#FWR       1-ST WRITE INITIATED
         BZ    LOOP#W30            NO
         CHECK DECB3               WAS WRITE COMPLETED
LOOP#W30 DS    0H
*
*  WALK BLOCK CHAIN AND REPLACE VERSTAMP ON '01C0' OFFLOAD BLOCKS
*  AND '01D0' END BLOCKS
*
         LR    R1,R8               BLOCK ADDRESS
         BAL   R10,ADJSTAMP        POSSIBLE ADJUST VERIFICATION STAMP
*
         OI    FLGB,FLGB#FWR       1-ST WRITE INITIATED
         XC    DECB3(4),DECB3      PREPARE THE NEXT
         WRITE DECB3,SF,,(R8),MF=E
         L     R0,B1+4
         ST    R8,B1+4
         ST    R0,B1
         LR    R8,R0
LOOP#1   DS    0H
         XC    DECB1(4),DECB1
         READ  DECB1,SF,,(R8),MF=E
         CHECK DECB2
* UPDATE THE PHYSICAL BLOCK NUMBER
         L     R1,NURIN
         LA    R1,1(R1)
         ST    R1,NURIN
         NI    FLGB,X'FF'-FLGB#NJE RESET FLAG
         LR    R1,R9
         BAL   R10,BLKAN
         TM    FLGS,FLGS#SEL       IS SELECT REQUIRED
         BZ    LOOP#2              NEXT BLOCK
         TM    FLGS+1,FLGS#PRT     ANY PRINT SELECT
         BO    LOOP#WA0            YES, CONTINUE
         TM    FLGB,FLGB#NJE       NJE HEADER FOUND
         BZ    LOOP#WA0            NO, CONTINUE
         TM    FLGS,FLGS#MRG       IS MERGE REQUIRED
         BO    LOOP#2              YES, DROP IT
         MVC   LISTR+5(L'TE),TE
         DRUKUJ VTD,R=LISTR1,L=L'TE+11
         ABEND 203
LOOP#WA0 DS    0H
         TM    FLGB,FLGB#JST       JOB STARTED
         BZ    LOOP#WB0            NEXT BLOCK
         BAL   R10,SELCHK          CHECK THE SELECTION
         TM    FLGB,FLGB#SEL       TO BE SELECTED
         BZ    LOOP#WB0            NO
         MVC   LISTR+5(L'TB),TB
         DRUKUJ VTD,R=LISTR1,L=L'TB+11
LOOP#WB0 DS    0H
         TM    FLGB,FLGB#SEL       TO BE SELECTED
         BZ    LOOP#2              NO
* WAS THE PRINT OPTION SPECIFIED
         TM    FLGS+1,FLGS#SDP     ANY PRINT SELECT
         BZ    LOOP#WC0
         LR    R1,R9               BLOCK ADDRESS
         BAL   R10,PRIDU           PRINT/DUMP BLOCK
         B     LOOP#2              NO
LOOP#WC0 DS    0H
         TM    FLGB,FLGB#SWR       2-ND WRITE INITIATED
         BZ    LOOP#WD0            NO
         CHECK DECB4               WAS WRITE COMPLETED
LOOP#WD0 DS    0H
*
*  WALK BLOCK CHAIN AND REPLACE VERSTAMP ON '01C0' OFFLOAD BLOCKS
*  AND '01D0' END BLOCKS
*
         LR    R1,R9               BLOCK ADDRESS
         BAL   R10,ADJSTAMP        POSSIBLE ADJUST VERIFICATION STAMP
*
         OI    FLGB,FLGB#SWR       2-ND WRITE INITIATED
         XC    DECB4(4),DECB4      PREPARE THE NEXT
         WRITE DECB4,SF,,(R9),MF=E
* EXCHANGE THE BUFFERS
         L     R0,B2+4
         ST    R9,B2+4
         ST    R0,B2
         LR    R9,R0
LOOP#2   DS    0H
         XC    DECB2(4),DECB2
         READ  DECB2,SF,,(R9),MF=E
         B     LOOP
         EJECT
*********************************************************************
*                                                                   *
*        JES2/SP SPOOL OFFLOAD DATA SET BLOCK ANALYZIS              *
*                                                                   *
*********************************************************************
BLKAN    EQU   *
         MVI   LISTR-1,C' '
         MVC   LISTR(JOB#END-LISTR),LISTR-1
         MVC   LISTR(4),=C'****'   ATTENTION CATCHING
         MVI   JOB#TYPE,C'I'       ASSUME THE INPUT JOB
         NI    FLGB,X'FF'-FLGB#JST SUPPRES THE JOB START INDICATOR
         LR    R4,R1               SAVE THE BEGINNING OF THE BLOCK
         CLC   0(4,R4),JOB#HDRX    JOB TO BE EXECUTED
         BE    BLKA#JHD            JOB START
         CLC   0(4,R4),JOB#HDRO    JOB OUTPUT
         BNE   BLKA#DHD            IS IT A DATA SET HEADER
         MVI   JOB#TYPE,C'O'       OUTPUT JOB
         OI    FLGB,FLGB#OUT       THE SAME
BLKA#JHD DS    0H
         OI    FLGB,FLGB#JHD       HEADER OCCURED
         OI    FLGB,FLGB#JST       JOB JUST STARTED TO BE CHECKED
         XC    JOB#RCDS,JOB#RCDS   TOTAL JOB RECORDS
         LA    R11,5(R4)           SKIP BLOCK HEADER
         USING NJH,R11             SET THE USING FOR THE BLOCK
BLKA#JHL DS    0H
         DRUKUJ VTD,R=LISTR1,L=6
         NI    FLGB,X'FF'-FLGB#SEL SWITCH SELECT OFF
         MVC   JOB#NAME,NJHGJNAM   JOB NAME
* CHECK IF JOBCLASS PRINTABLE
         MVI   JOB#CLS,C'*'        REPLACE WITH *
         CLI   NJHGJCLS,X'D0'      SYSLOG JOBCLASS
         BE    BLKA#CNK            SKIP INSERT
         CLI   NJHGJCLS,X'E0'      TSU JOBCLASS
         BE    BLKA#CNK            SKIP INSERT
BLKA#COK DS    0H
         MVC   JOB#CLS,NJHGJCLS    JOB CLASS
BLKA#CNK DS    0H
         CLI   NJHGORGN,X'00'      SPECIFIED?
         BE    *+10                NO,SKIP IT
         MVC   JOB#NODE,NJHGORGN   ORIGINATING NODE?
*  USE EXECUTION ID
         CLI   NJHGXEQU,X'00'      SPECIFIED?
         BE    *+10                NO,SKIP IT
         MVC   JOB#TSOI,NJHGXEQU   EXECUTION USER ID
         CLI   NJHGPRGN,X'00'      SPECIFIED?
         BE    *+10                NO,SKIP IT
         CLI   NJHGPRGN,X'40'      BLANK?
         BE    *+10                NO,SKIP IT
*
         MVC   JOB#PGNM,NJHGPRGN   PROGRAMMER NAME
         MVC   WORK+2(2),NJHGJID   JOB NUMBER
         MVC   JOB#FLG,=CL4' '
         PISZ  VPISZ1,WORK,JOB#NUMB,L=6,FD=F
         B     BLKA#HEX            GO LIST IT / POSSIBLE HEX INFO
         DROP  R11
*********************************************************************
*                                                                   *
*                 DATA SET HEADER ANALYZIS                          *
*                                                                   *
*********************************************************************
BLKA#DHD DS    0H
         MVI   LISTR-1,C' '
         CLC   0(4,R4),DSN#HDRO    OUTPUT DATA SET
         BE    BLKA#DSH
         CLC   0(4,R4),DSN#HDRX    INPUT DATA SET
         BNE   BLKA#EOJ            NOT A DATA SET HEADER
BLKA#DSH DS    0H
         LA    R11,5(R4)           SKIP THE HEADER
         USING NDH,R11
         MVC   LISTR(81),LISTR-1
         TM    FLGB,FLGB#OUT       IS IT THE OUTPUT JOB
         BZ    BLKA#DSI            NO
         TM    FLGS,FLGS#HEX       DETAILED PRINTOUT REQUESTED
         BZ    BLKA#NPR            NO
* DESCRIBE THE OUTPUT CLASS
         TM    8(R4),X'80'         INFO CONTAINING
         BZ    BLKA#NPR            NO; DO NOT OUTPUT CLASS
         MVC   JOB#CLS,NDHGCLAS    OUTPUT CLASS
         PISZ  VPISZ1,NDHGNREC,JOB#NODE,FD=F,L=10
* COMPUTE THE JOB TOTAL RECORDS
BLKA#NPR DS    0H
         TM    8(R4),X'80'         INFO CONTAINING
         BZ    BLKA#DSI            NO; DO NOT COUNT RECORDS
         L     R1,NDHGNREC         DATA SET RECORDS
         A     R1,JOB#RCDS         TOTAL
         ST    R1,JOB#RCDS
BLKA#DSI DS    0H
         TM    FLGS,FLGS#HEX       IS HEX REQUESTED
         BZR   R10
         LA    R0,NDHGFLG1         WHERE FROM
         LA    R1,JOB#FLG          WHERE TO
         LA    R2,1                NUMBER OF BYTES
         L     R15,ACONH          ADDRESS OF
         BALR  R14,R15                 CONVERT BINARY TO HEX OUT
         LA    R0,NDHGFLG2         WHERE FROM
         LA    R1,JOB#FLG+2        WHERE TO
         LA    R2,1                NUMBER OF BYTES
         L     R15,ACONH          ADDRESS OF
         BALR  R14,R15                 CONVERT BINARY TO HEX OUT
         B     BLKA#HEX
         DROP  R11
BLKA#EOJ DS    0H
         CLC   0(4,R4),DSN#BLKO    DATA SET BLOCK
         BE    BLKA#BLK
         CLC   0(4,R4),DSN#BLKO+4  VM BLOCK CONTINUATION
         BE    BLKA#BLK
         CLC   0(4,R4),DSN#BLKO+8  JCL BLOCK CONTINUATION
         BE    BLKA#BLK
         CLC   0(4,R4),DSN#BLKX    DATA SET BLOCK
         BE    BLKA#BLK
         CLC   0(4,R4),JOB#TRLO    OUTPUT JOB TRAILER
         BE    BLKA#JTR
         CLC   0(4,R4),JOB#TRLX    INPUT JOB TRAILER
         BE    BLKA#JTR
         CLC   0(4,R4),JOB#HDRO    OUTPUT JOB HEADER
         BE    BLKA#HD2
         CLC   0(4,R4),JOB#HDRX    INPUT JOB HEADER
         BE    BLKA#HD2
         CLC   0(4,R4),NJE#HDR     NJE SPOOL OFFLOAD HEADER
         BE    BLKA#OFF
         CLC   0(4,R4),NJE#EOJ     OFFLOAD END OF RECORD
         BER   R10
         BNE   BLKA#NDF            NOT RECOGNIZABLE
BLKA#HD2 DS    0H
         MVI   LISTR-1,C' '
         MVC   LISTR(JOB#END-LISTR),LISTR-1
         B     BLKA#HEX
BLKA#JTR DS    0H
         LA    R11,5(R4)           SKIP THE HEADER
         USING NJT,R11
         MVI   LISTR-1,C' '
         MVC   LISTR(JOB#END-LISTR),LISTR-1
         TM    FLGB,FLGB#OUT       IS IT THE OUTPUT JOB
         BZ    BLKA#JT1
         MVC   LISTR+5(L'T7),T7    TOTAL RECORDS
         PISZ  VPISZ1,NJTGALIN,JOB#NODE,FD=F,L=10
BLKA#JT1 DS    0H
         NI    FLGB,X'FF'-FLGB#JHD LOOK FOR THE NEW JOB
         NI    FLGB,X'FF'-FLGB#OUT LOOK FOR THE NEW JOB
         B     BLKA#HEX
         DROP  R11
*      INVALID STRUCTURE,TRAILER ABSENT
BLKA#EJX DS    0H
         MVC   LISTR(L'T6),T6      TRAILER MISSING
         NI    FLGB,X'FF'-FLGB#JHD FORCE END OF THE JOB
         NI    FLGB,X'FF'-FLGB#OUT
         B     BLKA#HEX
* NJE OFFLOAD HEADER
BLKA#OFF DS    0H
         OI    FLGB,FLGB#NJE       FOUND NJE HEADER RECORD
         TM    FLGS,FLGS#HEX       IS HEX REQUESTED
         BZR   R10
         MVC   LISTR(L'TD),TD      OFFLOAD HEADER FOUND
* WRITE THE BLOCK NUMBER
*        PISZ  VPISZ1,NURIN,JOB#NODE,L=6,FD=F
         TM    FLGS,FLGS#HEX       IS HEX REQUESTED
         BZ    BLKA#PRT            NO
         LR    R0,R4               WHERE FROM
         LA    R1,JOB#HEX          WHERE TO
         LA    R2,13               NUMBER OF BYTES
         L     R15,ACONH          ADDRESS OF
         BALR  R14,R15                 CONVERT BINARY TO HEX OUT
         LA    R2,(JOB#END-LISTR)+6
         DRUKUJ VTD,R=LISTR1,L=(R2)
         BR    R10
* INVALID BLOCK HEADER
BLKA#NDF DS    0H
         TM    FLGS,FLGS#HEX       IS HEX REQUESTED
         BZR   R10
         MVC   LISTR(L'T4),T4      INVALID HEADER
* WRITE THE BLOCK NUMBER ADN DROP THE BLOCK
         PISZ  VPISZ1,NURIN,JOB#NODE,L=6,FD=F
         LR    R0,R4               WHERE FROM
         LA    R1,JOB#HEX          WHERE TO
         LA    R2,13               NUMBER OF BYTES
         L     R15,ACONH          ADDRESS OF
         BALR  R14,R15                 CONVERT BINARY TO HEX OUT
         LA    R2,(JOB#END-LISTR)+6
         DRUKUJ VTD,R=LISTR1,L=(R2)
         BR    R10                 SKIP TO NEXT BLOCK
* DATA SET DATA BLOCK
BLKA#BLK DS    0H
         B     BLKA#CHD            SKIP NEXT DATA RECORDS
*:TEST:  TM    FLGS,FLGS#HEX       IS HEX REQUESTED
*:TEST:  BZR   R10                 NO
*:TEST:  LR    R0,R4               WHERE FROM
*:TEST:  LA    R1,JOB#HEX          WHERE TO
*:TEST:  LA    R2,13               NUMBER OF BYTES
*:TEST:  L     R15,ACONH          ADDRESS OF
*:TEST:  BALR  R14,R15                 CONVERT BINARY TO HEX OUT
*:TEST:  LA    R2,(JOB#END-LISTR)+6
*:TEST:  DRUKUJ VTD,R=LISTR1,L=(R2)
*:TEST:  B     BLKA#CHD            SKIP NEXT DATA RECORDS
* UNKNOWN BLOCK FORMAT
UNK      DS    0H
         MVC   LISTR(L'T5),T5      UNKNOWN FORMAT
         DRUKUJ VTD,R=LISTR1,L=L'T5+6
         BR    R10
*********************************************************************
*                                                                   *
*        WRITE THE HEXADECIMAL VALUES OF FLAGS HEADERS              *
*                                                                   *
*********************************************************************
BLKA#HEX DS    0H
         TM    FLGS,FLGS#HEX       IS HEX REQUESTED
         BZ    BLKA#PRT            NO
         LR    R0,R4               WHERE FROM
         LA    R1,JOB#HEX          WHERE TO
         LA    R2,13               NUMBER OF BYTES
         L     R15,ACONH          ADDRESS OF
         BALR  R14,R15                 CONVERT BINARY TO HEX OUT
         LA    R2,(JOB#END-LISTR)+6
         DRUKUJ VTD,R=LISTR1,L=(R2)
         B     BLKA#CHB
*********************************************************************
*                                                                   *
*        WRITE A LINE OF DATA                                       *
*                                                                   *
*********************************************************************
BLKA#PRT DS    0H
         LA    R2,(JOB#HEX-LISTR)+6
         DRUKUJ VTD,R=LISTR1,L=(R2)
         BR    R10
*********************************************************************
*                                                                   *
*        WALK THE HEADER BLOCK CHAINS                               *
*                                                                   *
*********************************************************************
BLKA#CHB DS    0H
         LA    R4,5(R4)      BUMP PAST 4 BYTES INDICATOR
         LH    R3,0(R4)      LENGTH OF BLOCK
         AR    R4,R3         POINT TO NEXT BLOCK / DATA
         CLI   0(R4),X'FF'   END OF BLOCK
         BNE   BLKA#DHD
         BR    R10           YES; RETURN
*********************************************************************
*                                                                   *
*        WALK THE DATA BLOCK CHAINS                                 *
*                                                                   *
*********************************************************************
BLKA#CHD DS    0H
         LA    R4,4(R4)      BUMP PAST 4 BYTES INDICATOR
         XR    R2,R2
         IC    R2,0(R4)            LEN
         LTR   R2,R2
         BZR   R10                 WRONG RECORD LENGTH
         LA    R4,2(R4)            RECORD BEGIN
         BCTR  R2,0
         AR    R4,R2         BUMP TO NEXT RECORD
         CLI   0(R4),X'FF'   END OF BLOCK
         BNE   BLKA#DHD
         BR    R10           YES; RETURN
         EJECT
*********************************************************************
*                                                                   *
*                 PRINT/DUMP A BLOCK (SUBFUNCTION OF SELECT)        *
*                                                                   *
*  R01 ADDRESS OF THE BLOCK                                         *
*                                                                   *
*********************************************************************
PRIDU    DS    0H
         TM    FLGS+1,FLGS#SDU
         BO    PRI#DUMP            DUMP REQUESTED
* LIST SPECIFIED NUMBER OF UNPACKED RECORDS
* CHECK THE TYPE OF THE BLOCK
         LR    R4,R1               MAKE R4 POINT TO BLOCK
PRI#A00  EQU   *
         CLC   0(4,R4),JOB#HDRO    OUTPUT JOB HEADER
         BE    PRI#A01
         CLC   0(4,R4),JOB#HDRX     INPUT JOB HEADER
         BE    PRI#A01
         CLC   0(4,R4),DSN#HDRO    OUTPUT DATASET HEADER
         BE    PRI#ELMT
         CLC   0(4,R4),DSN#HDRX     INPUT DATASET HEADER
         BE    PRI#NSPX
         CLC   0(4,R4),JOB#TRLO    OUTPUT JOB TRAILER
         BE    PRI#E01
         CLC   0(4,R4),JOB#TRLX     INPUT JOB TRAILER
         BE    PRI#E01
*        B     PRI#BLKO
         CLC   0(4,R4),DSN#BLKO    DATA SET BLOCK
         BE    PRI#BLKO
         CLC   0(4,R4),DSN#BLKO+4  VM BLOCK CONTINUATION
         BE    PRI#BLKO
         CLC   0(4,R4),DSN#BLKO+8  JCL BLOCK CONTINUATION
         BE    PRI#BLKO
         CLC   0(4,R4),DSN#BLKX    DATA SET BLOCK
         BE    PRI#BLKO
         BR    R10                 INVALID BLOCK; DROP IT
PRI#A01  EQU   *
         TM    LISTG+DCBOFLGS,X'10' IF OPEN MULTIPLE JOB HEADERS
         BO    PRI#NSPX             BYPASS OPENING NEW SYSOUT
         LH    R1,PRNTCNT           LOAD PRINT OUT COUNT
         LA    R1,1(R1)             INCREMENT COUNT
         STH   R1,PRNTCNT           SAVE COUNT
         LA    R0,PRNTCNT           LOAD ADDRESS
*                                        LAST HALF OF PRINT OUT COUNT
         MVC   LISTG+DCBDNAM(8),=CL8'PRNT    '
         LA    R1,LISTG+44          -->DCB + 44 (LAST 4 CHAR OF DDNAME)
         LA    R2,2                 2 CHARACTERS
         L     R15,ACONH          ADDRESS OF
         BALR  R14,R15                 CONVERT BINARY TO HEX OUT
         MVC   S99T1NAM,LISTG+DCBDNAM    MOVE CONVERTED DDNAME
         LA    R1,S99RBPTR          ADDRESS OF DYN ALLOCATE LIST
         DYNALLOC                   ALLOCATE SYSOUT
         LTR   R15,R15              SVC99 OKAY?
         BZ    PRI#A02              YES, OPEN FILE
         CLC   S99INFO,=X'0000'
         BNE   PRI#AB1
         CLC   S99ERROR,=X'0000'
         BNE   PRI#AB2
         B     PRI#A02
PRI#AB1  EQU   *
         ABEND 201,DUMP
PRI#AB2  EQU   *
         ABEND 202,DUMP
PRI#A02  EQU   *
         OPEN  (LISTG,(OUTPUT))
         TM    LISTG+DCBOFLGS,X'10'
         BZ    NOPRT
         B     PRI#NSPX
PRI#E01  EQU   *
         TM    LISTG+DCBOFLGS,X'10' IF CLOSED MULTIPLE JOB TRAILERS
         BZ    PRI#NSPX             BYPASS CLOSING SYSOUT
         CLOSE (LISTG)
         B     PRI#NSPX
PRI#ELMT DS    0H
* PROVIDE THE EMPTY LINE BETWEEN EVERY OUTPUT ELEMENT
         TM    FLGS+1,FLGS#SSH
         BZ    PRI#ELM0            PRINT REQUESTED,NO NEED
         DRUKUJ VTD,R=LISTR1,L=6
PRI#ELM0 DS    0H
         LA    R3,5(R4)           GET HEADER RECORD ADDRESS
         USING NDH,R3             PROVIDE ADDRESSABLITY
         TM    NDHSEQ,X'01'       SPOOL OFFLOAD FACILITY HEADER
         BO    PRI#NSPC           YES; IGNORE IT
         MVI   CARRIAGE,C'N'      NO CARRIAGE CONTROL (DEFAULT)
         TM    NDHGRCFM,X'06'     CARRIAGE CONTROL ?
         BZ    PRI#ELM1           NO, SKIP SETTING
         MVI   CARRIAGE,C'X'      CARRIAGE CONTROL SET
         TM    NDHGFLG2,NDHGF2PU  PUNCH ?
         BZ    PRI#ELM1           NO, SKIP SETTING
         MVI   CARRIAGE,C'N'      SET NO CARRIAGE CONTROL
PRI#ELM1 DS    0H
         CLC   NDHGDD,=C'JESJCL  '   JCL LOG ?
         BE    PRI#ELM2           YES, OUTPUT CHANNEL SKIP
         CLC   NDHGDD,=C'JESYSMSG'   SYSTEM MESSAGES ?
         BE    PRI#ELM2           YES, OUTPUT CHANNEL SKIP
         CLI   CARRIAGE,C'N'      NO CARRIAGE CONTROL ON DATASET?
         BE    PRI#ELM2           YES, OUTPUT CHANNEL SKIP
         B     PRI#NSPC           DONT OUTPUT CHANNEL SKIP
         DROP  R3
PRI#ELM2 DS    0H
         LA    R2,5               SET LINE LENGTH TO 1
         STH   R2,LISTJRDW        SAVE AS RDW
         MVI   LISTJC,C'1'        SKIP TO CHANNEL 1 CONTROL
         PUT   LISTG,LISTJRDW     OUTPUT PAGE BREAK BETWEEN JES2
*                                 DATASETS
         MVI   LISTJC,C' '        RESET
PRI#NSPC DS    0H
* DATA SET HEADER BLOCK
         LH    R5,NUSPEC
         LTR   R5,R5               WAS SPECIFIED
         BNZ   PRI#NSPX            NO,TAKE STANDARD
         LA    R5,NUREC            NUMBER OF RECORDS TO BE PRINTED
* BUMP THROUGH RECORD BLOCK IF NOT DATA
PRI#NSPX DS    0H
         LA    R4,5(R4)            SKIP OVER IT
         LH    R3,0(R4)
         AR    R4,R3
         B     PRI#A00
         SPACE 5
* OUTPUT BLOCK HEADER
PRI#BLKO DS    0H
         TM    FLGS,FLGS#LST       LIST OPTION REQUESTED?
         BOR   R10                 ONLY INDICATIVE PRINTS
PRI#LIST DS    0H
         LA    R4,4(R4)            SKIP OVER 4 BYTES (HEADER INFO)
         XR    R2,R2               CLEAR R2
         IC    R2,0(R4)            LEN OF DATA FOLLOWING
         LTR   R2,R2               TEST VALUE IN R2
         BZR   R10                 WRONG RECORD LENGTH
         LA    R4,2(R4)            POINT TO RECORD BEGIN
         BCTR  R2,0                DECREASE FOR EXECUTE COMMAND
* IS THE PRINT OPTION SPECIFIED
         TM    FLGS+1,FLGS#PRT
         BZ    PRI#LST1
* CHECK FOR PROPER LENGTH VALUES
         TM    FLGB,FLGB#OUT       IS IT THE OUTPUT JOB
         BZ    PRI#LST5
         B     PRI#LST6
PRI#LST5 DS    0H
         EX    R2,PRMVEX1          MOVE TO THE PRINT AREA
         MVI   LISTJC,C' '         STANDARD CNTL CHARACTER
         B     PRI#LST8
PRI#LST6 DS    0H
         CLI   CARRIAGE,C'N'       NO CARRIAGE CONTROL
         BNE   PRI#LST7            GO, OUTPUT IT
         EX    R2,PRMVEX1          MOVE TO THE PRINT AREA
         B     PRI#LST8
PRI#LST7 DS    0H
         EX    R2,PRMVEXL          MOVE WITH CONTROL CHARACTER
         B     PRI#LST8
PRI#LST8 DS    0H
         LA    R3,4(R2)            RDW LENGTH
         CLI   CARRIAGE,C'N'       NO CARRIAGE CONTROL
         BNE   *+8
         LA    R3,5(R2)            ADJ RDW LENGTH FOR NO CC
         STH   R3,LISTJRDW
         PUT   LISTG,LISTJRDW
         B     PRI#LST2
PRI#LST1 DS    0H
* CHECK FOR PROPER LENGTH VALUES
         LTR   R5,R5
         BNPR  R10                 ADDITIONAL LOOP PROTECTION
         TM    FLGB,FLGB#OUT       IS IT THE OUTPUT JOB
         BZ    PRI#LST3
         EX    R2,PRMVEX           MOVE TO THE PRINT AREA
         B     PRI#LST4
PRI#LST3 DS    0H
         EX    R2,PRMVEX1          MOVE TO THE PRINT AREA
         MVI   LISTJC,C' '         STANDARD CNTL CHARACTER
PRI#LST4 DS    0H
         LA    R3,4(R2)
         DRUKUJ VTD,R=LISTJRDW,L=(R3)
PRI#LST2 DS    0H
         AR    R4,R2               POINT TO NEXT RECORD
         CLI   0(R4),X'FF'         END OF BLOCK INDICATOR
         BER   R10
         TM    FLGS+1,FLGS#PRT     PRINT REQUESTED?
         BO    PRI#A00             YES,PRINT ALL
         BCT   R5,PRI#A00
         BR    R10
* MOVE THE RECORD WITH/WITHOUT CONTROL CHARACTER
PRMVEX   MVC   LISTJ(0),1(R4)      WITHOUT
PRMVEX1  MVC   LISTJ(0),0(R4)      WITHOUT INPUT
PRMVEXL  MVC   LISTJC(0),0(R4)     WITH
* DUMP THE CONTENTS OF THE BLOCKS
PRI#DUMP DS    0H
         ST    R1,BLKTAB
* IS IT TO BE DUMPED
         OC    NUSPEC,NUSPEC
         BZ    PRI#DMP1              NOT SPECIFIED,PRINT ALL
* IS IT THE NEW JOB
         TM    FLGB,FLGB#JST
         BZ    *+10                  NO
         MVC   NUCURR,NUSPEC         REFRESH THE COUNT
         LH    R2,NUCURR             LOAD THE COUNT
         LTR   R2,R2                 ALREADY REQUESTED PRINTED
         BNPR  R10                   YES
         BCT   R2,*+4
         STH   R2,NUCURR
* PROVIDE THE EMPTY LINE IN FRONT OF EACH BLOCK
PRI#DMP1 DS    0H
         DRUKUJ VTD,R=LISTR1,L=6
         LA    R1,DRUTAB
         L     R15,DRUBAD
         BALR  R14,R15
         BR    R10
         EJECT
*********************************************************************
*                                                                   *
*                 ADJUST TIME/DATE VERIFICATION STAMP ON OFFLOAD    *
*                 MERGE                                             *
*                                                                   *
*  R01 ADDRESS OF THE BLOCK                                         *
*                                                                   *
*********************************************************************
ADJSTAMP DS    0H
         TM    FLGS,FLGS#MRG       IS MERGE REQUIRED
         BZR   R10                 NO, LET STAMP ALONE
         LR    R4,R1               CHANGE DATA REGISTER
ADJ#LOOP DS    0H
         CLC   0(4,R4),JOB#HDRO    OUTPUT JOB HEADER
         BE    ADJ#HD1
         CLC   0(4,R4),JOB#HDRX    INPUT JOB HEADER
         BE    ADJ#HD1
         CLC   0(4,R4),DSN#BLKO    DATA SET BLOCK
         BE    ADJ#CHD
         CLC   0(4,R4),DSN#BLKO+4  VM BLOCK CONTINUATION
         BE    ADJ#CHD
         CLC   0(4,R4),DSN#BLKO+8  JCL BLOCK CONTINUATION
         BE    ADJ#CHD
         CLC   0(4,R4),DSN#BLKX    DATA SET BLOCK
         BE    ADJ#CHD
         CLC   0(4,R4),JOB#TRLO    OUTPUT JOB TRAILER
         BE    ADJ#JT1
         CLC   0(4,R4),JOB#TRLX    INPUT JOB TRAILER
         BE    ADJ#JT1
         CLC   0(4,R4),NJE#EOJ     (?) OFFLOAD TRAILER
         BER   R10
         MVC   LISTR(L'T4),T4      INVALID HEADER
         PISZ  VPISZ1,NURIN,JOB#NODE,L=6,FD=F
         BR    R10
         SPACE 5
*********************************************************************
*                                                                   *
*        CHECK HEADER AND ADJUST IF RIGHT ONE                       *
*                                                                   *
*********************************************************************
ADJ#HD1  DS    0H
         LA    R3,5(R4)             POINT PAST INDICATOR
         TM    3(R3),X'01'          SPOOL OFFLOAD BLOCK
         BZ    ADJ#CHB              NO, IGNORE IT
         LA    R3,19(R3)            YES, POINT PAST GENERAL SECTION
ADJ#HD1B DS    0H
         CLI   2(R3),X'8A'          JOB SCHEDULING SECTION
         BE    ADJ#HD1I             YES, INCREMENT
         CLI   2(R3),X'8C'          JOB HEADER SECURITY SECTION
         BE    ADJ#HD1I             YES,INCREMENT
         CLI   2(R3),X'8D'          JOB ACCOUNTING SECTION
         BE    ADJ#HD1I             YES, INCREMENT
         CLI   2(R3),X'84'          JES2 SUBSYSTEM SECTION
         BNE   ADJ#HD1I             NO, INCREMENT
         CLI   3(R3),X'80'          SPOOL OFFLOAD FACILITY
         BNE   ADJ#HD1I             NO, INCREMENT
         USING NJHO,R3              ADDRESS IT
*        MVC   8(8,R3),VERSTAMP     YES; ADJUST STAMP
         MVC   NJHOTIME,VERSTIME    ADJUST TIME STAMP
         MVC   NJHODATE,VERSDATE    ADJUST DATE STAMP
         B     ADJ#CHB              GET NEXT BLOCK
         DROP  R3
ADJ#HD1I DS    0H
         LH    R5,0(R3)             GET LENGTH OF SECTION
         AR    R3,R5                INCREMENT TO NEXT SECTION
         B     ADJ#HD1B             LOOP (POSSIBLE PROBLEM HERE)
         SPACE 5
*********************************************************************
*                                                                   *
*        CHECK TRAILER AND ADJUST VERIFICATION STAMP                *
*                                                                   *
*********************************************************************
ADJ#JT1  DS    0H
         LA    R3,5(R4)             POINT PAST INDICATOR
         USING NJT,R3
         LH    R5,NJTGLEN           GET LENGTH OF GENERAL SECTION
         AR    R3,R5                ADD TO CURRENT POINTER
         LA    R3,4(R3)             POINT PAST TOTAL BLOCK SIZE
         DROP  R3
ADJ#JT1B DS    0H
         CLI   2(R3),X'89'          JOB TRAILER ACCOUNTING SECTION
         BE    ADJ#JT1I             YES, INCREMENT
         CLI   2(R3),X'84'          JES2 SUBSYSTEM SECTION
         BNE   ADJ#JT1I             NO, INCREMENT
         CLI   3(R3),X'80'          SPOOL OFFLOAD FACILITY
         BNE   ADJ#JT1I             NO, INCREMENT
         USING NJTO,R3              ADDRESS IT
         MVC   NJTOTIME,VERSTIME    ADJUST VERIFICATION STAMP - TIME
         MVC   NJTODATE,VERSDATE    ADJUST VERIFICATION STAMP - DATE
         B     ADJ#CHB              GO GET NEXT BLOCK
         DROP  R3
ADJ#JT1I DS    0H
         LH    R5,0(R3)             GET LENGTH OF SECTION
         AR    R3,R5                INCREMENT TO NEXT SECTION
         B     ADJ#JT1B             LOOP (POSSIBLE PROBLEM HERE)
         SPACE 5
*********************************************************************
*                                                                   *
*        WALK THE HEADER BLOCK CHAINS                               *
*                                                                   *
*********************************************************************
ADJ#CHB  DS    0H
         LA    R4,5(R4)      BUMP PAST 4 BYTES INDICATOR
         LH    R3,0(R4)      LENGTH OF BLOCK
         AR    R4,R3         POINT TO NEXT BLOCK / DATA
         CLI   0(R4),X'FF'   END OF BLOCK
         BNE   ADJ#LOOP
         BR    R10           YES; RETURN
*********************************************************************
*                                                                   *
*        WALK THE DATA BLOCK CHAINS                                 *
*                                                                   *
*********************************************************************
ADJ#CHD  DS    0H
         LA    R4,4(R4)      BUMP PAST 4 BYTES INDICATOR
         XR    R2,R2
         IC    R2,0(R4)            LEN
         LTR   R2,R2
         BZR   R10                 WRONG RECORD LENGTH
         LA    R4,2(R4)            RECORD BEGIN
         BCTR  R2,0
         AR    R4,R2         BUMP TO NEXT RECORD
         CLI   0(R4),X'FF'   END OF BLOCK
         BNE   ADJ#LOOP
         BR    R10           YES; RETURN
         EJECT
*********************************************************************
*                                                                   *
*                 PARM FIELD ANALYZIS                               *
*                                                                   *
*  R01 - ADDRESS OF THE PARM FIELD                                  *
*  R02 - LENGTH OF IT                                               *
*  R10 - RETURN ADDRESS                                             *
*                                                                   *
*        ACCEPTED VALUES ARE : HEX SELECT LIST                      *
*                                                                   *
*********************************************************************
PARANA   DS    0H
         CH    R2,=H'3'            IS IT TOO SHORT
         BL    WRPAR               WRONG PARAMETER
         LA    R1,2(R1)            SKIP OVER THE LENGTH
* IS IT THE HEX REQUEST
         CLC   0(L'THX,R1),THX
         BNE   PARA#LST
         OI    FLGS,FLGS#HEX+FLGS#LST
         BR    R10
PARA#LST DS    0H
* IS IT THE LIST REQUEST
         CLC   0(L'TLI,R1),TLI
         BNE   PARA#SEL
         OI    FLGS,FLGS#LST
* CHECK IF SUBFUNCTIONS SPECIFIED
         CH    R2,=AL2(L'TLI)
         BNHR  R10                 NO
         CLI   L'TLI(R1),C','
         BNER  R10                 NO
* AND DISALLOW - CODING DOES NOT CURRENTLY SUPPORT
         B     WRPAR
* ACCEPT SUBFUNCTION SPECIFICATION,IF WRONG REJECT THE PARM FIELD
         CLC   1+L'TLI(L'TDU,R1),TDU
         BNE   PARA#SH
* IS THE NUMBER OF BLOCKS SPECIFIED
         CLI   1+L'TLI+L'TDU(R1),C','
         BNE   PARA#DUL           NO
* NUMBER OF BLOCKS TO BE READ
         LA    R1,2+L'TLI+L'TDU(R1) BEGIN OF IT
         SH    R2,=AL2(2+L'TLI+L'TDU)
         BNP   PARA#DUL           ERROR IN SPECIFICATION
         L     R15,=V(VCZYT)
         BALR  R14,R15            READ THE NUMBER
         LTR   R15,R15            WAS OK
         BNZ   PARA#DUL           NO
         STH   R0,NUSPEC
* PRELOAD THE DRUB MODULE
PARA#DUL DS    0H
         LOAD  EP=DRUB
         ST    R0,DRUBAD
         OI    FLGS+1,FLGS#SDU
* SET ON THE SELECT FLAG AS WELL
         OI    FLGS,FLGS#SEL
         BR    R10
PARA#SH  DS    0H
         CLC   1+L'TLI(L'TSH,R1),TSH
         BNE   WRPAR
         OI    FLGS+1,FLGS#SSH
* SET ON THE SELECT FLAG AS WELL
         OI    FLGS,FLGS#SEL
* IS THE NUMBER OF RECORDS SPECIFIED
         CLI   1+L'TLI+L'TSH(R1),C','
         BNER  R10                NO
* NUMBER OF BLOCKS TO BE READ
         LA    R1,2+L'TLI+L'TSH(R1) BEGIN OF IT
         SH    R2,=AL2(2+L'TLI+L'TSH)
         BNPR  R10                ERROR IN SPECIFICATION
         L     R15,=V(VCZYT)
         BALR  R14,R15            READ THE NUMBER
         LTR   R15,R15            WAS OK
         BNZR  R10                NO
         STH   R0,NUSPEC
         BR    R10
PARA#SEL DS    0H
* IS IT THE SELECT REQUEST
         CLC   0(L'TSE,R1),TSE
         BNE   PARA#MRG
         OI    FLGS,FLGS#SEL
         BR    R10
PARA#MRG DS    0H
* IS IT THE MERGE REQUEST
         CLC   0(L'TMG,R1),TMG
         BNE   PARA#PRT
         OI    FLGS,FLGS#SEL
         OI    FLGS,FLGS#MRG
         BR    R10
PARA#PRT DS    0H
* IS IT THE SELECT REQUEST
         CLC   0(L'TPR,R1),TPR
         BNE   WRPAR
* SET PRINT REQUEST
*     ON THE SELECT FLAG AS WELL
         OI    FLGS+1,FLGS#PRT
         OI    FLGS,FLGS#SEL
         BR    R10
* WRONG PARAMETER
WRPAR    DS    0H
         MVC   LISTR(L'T8),T8      END OF FILE
         DRUKUJ VTD,R=LISTR1,L=L'T8+6
         LA    R15,RC#WRP
         B     WROC
* SYNTAX CHECK TEXTS
THX      DC    C'HEX'
TLI      DC    C'LIST'
TDU      DC    C'DUMP'
TSH      DC    C'SHOW'
TSE      DC    C'SELECT'
TPR      DC    C'PRINT'
TMG      DC    C'MERGE'
         EJECT
*********************************************************************
*                                                                   *
*                 READ CONTROL CARDS                                *
*                                                                   *
*  R00 - LENGTH OF IT                                               *
*  R01 - ADDRESS OF THE DATA FIELD                                  *
*  R10 - RETURN ADDRESS                                             *
*                                                                   *
*********************************************************************
RDCTLC   DS    0H
         LA    R3,SEL#LEN          LENGTH OF ONE ENTRY
         LR    R4,R1               GETMAINED AREA
         LA    R5,SEL#QTY          NUMBER OF ENTRIES
* CHECK IF GENERAL SELECTION CRITERIONS ENTERED
         GET   SYSIN
         LR    R11,R1
         MVC   LISTR(80),0(R1)
         DRUKUJ VTD,R=LISTR1,L=86
* RESET ANY PREVIOUS OPTIONS
         NI    FLGS,X'FF'-FLGS#SLO-FLGS#SLI
         LR    R1,R11
         CLC   0(8,R1),=CL8'OUTPUTS'
         BE    RDC#OUT
         CLC   0(8,R1),=CL8'INPUTS'
         BE    RDC#INP
         B RDC#LP1
* DETAILED SELECTION CARDS EXPECTED
RDC#LOOP DS    0H
         GET   SYSIN
         LR    R11,R1
         MVC   LISTR(80),0(R1)
         DRUKUJ VTD,R=LISTR1,L=86
RDC#LP1  DS    0H
         LR    R1,R11
         CLC   0(8,R1),=CL8'OUTPUTS'
         BE    RDC#ERR
         CLC   0(8,R1),=CL8'INPUTS'
         BE    RDC#ERR
* INITIALIZE THE ENTRY
         MVI   0(R4),C' '
         MVC   1(SEL#LEN-1,R4),0(R4)
         XC    SEL#JBN(4,R4),SEL#JBN(R4)
         MVI   SEL#FLG(R4),X'00'   SELECTION FLAGS
* CONVERT THE CARD TO THE SELECT ENTRY IN THE TABLE
         CLI   0(R1),C' '          IS THERE A JOBNAME
         BE    RDC#NAL             NO,JOB NUMBER EXPECTED
         CLI   0(R1),C'*'          IS THERE PREFIX REQUEST
         BE    RDC#PRF
         CLI   0(R1),C'Â¢'          IS THERE PREFIX REQUEST
         BE    RDC#CLS
         MVC   SEL#JOB(8,R4),0(R1) MOVE THE JOBNAME
         OI    SEL#FLG(R4),SFL#JBS JOBNAME SPECIFIED
         CLC   9(4,R1),=CL4'ALL '
         BNE   RDC#NAL
         OI    SEL#FLG(R4),SFL#ALL  ALL JOBS WITH JOBNAME TO SELECT
         B     RDC#CNT
* READ THE JOB NUMBER AND CONVERT TO BINARY
RDC#NAL  DS    0H
         LA    R1,9(R1)            NUMBER ADDRESS
         CLC   0(5,R1),=CL5' '
         BE    RDC#CNT
         LA    R2,5                LENGTH OF IT
         L     R15,=V(VCZYT)
         BALR  R14,R15
         LTR   R15,R15
         BNZ   RDC#NNM             ERROR IN THE JOB NUMBER
         LTR   R0,R0
         BZ    RDC#NNM             ERROR IN THE JOB NUMBER
         ST    R0,SEL#JBN(R4)
         OI    SEL#FLG(R4),SFL#JBN
         B     RDC#CNT
* PREFIX REQUESTED
RDC#PRF  DS    0H
         LA    R1,1(R1)            SKIP OVER *
         LA    R2,7                PREFIX LN
         LA    R3,0(R1,R2)         END OF JOBNAME FIELD
         BCTR  R3,0                SET THE PRECEDING CHARACTER
RDC#PRF1 CLI   0(R3),C' '          STILL BLANKS
         BNE   RDC#PRF2            PREFIX STARTS
         BCTR  R3,0                SET THE PRECEDING CHARACTER
         BCT   R2,RDC#PRF1         CONTINUE THE SEARCH
         B     RDC#ERR             NOTHING FOUND
RDC#PRF2 MVC   SEL#JOB(7,R4),0(R1) PREFIX MOVE
         BCTR  R2,0                SET THE CORRECT CHARACTER LENGTH
         STC   R2,SEL#PRL(R4)      PREFIX LENGTH
         OI    SEL#FLG(R4),SFL#PRF PREFIX SPECIFIED
         B     RDC#CNT1
* JOB CLASS REQUESTED
RDC#CLS  DS    0H
         MVC   SEL#JOB(1,R4),1(R1) CLASS
         OI    SEL#FLG(R4),SFL#CLS PREFIX SPECIFIED
         B     RDC#CNT1
* JOB NUMBER NOT SPECIFIED
RDC#NNM  DS    0H
         TM    SEL#FLG(R4),SFL#JBS JOBNAME SPECIFIED
         BZ    RDC#ERR             NO,ERROR
* CONTINUE THE PROCESSING
RDC#CNT  DS    0H
* WAS ANYTHING SPECIFIED
         TM    SEL#FLG(R4),SFL#JBS+SFL#JBN+SFL#ALL
         BZ    RDC#ERR
RDC#CNT1 DS    0H
         LA    R4,SEL#LEN(R4)
         BCT   R5,RDC#LOOP
* TOO MANY ENTRIES ON SYSIN
         MVC   LISTR(L'TA),TA      TOO MANY ENTRIES
         DRUKUJ VTD,R=LISTR1,L=L'TA+6
         B     RDC#EOD
* ALL OUTPUT JOBS TO BE SELECTED
RDC#OUT  DS    0H
         OI    FLGS,FLGS#SLO
         B     RDC#EOD
* ALL INPUT JOBS TO BE SELECTED
RDC#INP  DS    0H
         OI    FLGS,FLGS#SLI
         B     RDC#EOD
* REGULAR EOF OR END OF PROCESSING
RDC#EOD  DS    0H
* COMPUTE THE NUMBER OF CREATED ENTRIES
         LA    R1,SEL#QTY
         SR    R1,R5
         ST    R1,GT#SEL+8
         MVI   VTD,X'00'
         CLOSE SYSIN
         BR    R10
* GENERAL SELECTION CARD INSIDE THE DETAILED,ERROR
RDC#ERR  DS    0H
         OI    FLGS,FLGS#ERR
         MVC   LISTR(L'T9),T9      ERROR
         DRUKUJ VTD,R=LISTR1,L=L'T9+6
         LA    R15,RC#WRP
         B     WROC
         EJECT
*********************************************************************
*                                                                   *
*              CHECK IF THE JOB IS TO BE SELECTED FOR COPY          *
*                                                                   *
* R11 JOB HEADER POINTER                                            *
* R10 RETURN ADDRESS                                                *
*     FLGB#SEL SET ON IF JOB TO BE SELECTED                         *
*                                                                   *
*********************************************************************
SELCHK   DS    0H
         USING NJH,R11             SET THE USING FOR THE BLOCK
* SWITCH OFF THE SELECT BIT FOR THE BEGINNING
         NI    FLGB,X'FF'-FLGB#SEL
* IS THERE A GLOBAL REQUEST
         TM    FLGS,FLGS#SLI+FLGS#SLO
         BZ    SELC#SLC            NO
         TM    FLGS,FLGS#SLO       ALL OUTPUT JOBS TO BE SELECTED
         BZ    SELC#SLI
* ALL OUTPUT JOBS TO BE SELECTED
         TM    FLGB,FLGB#OUT       IS IT THE OUTPUT JOB
         BZR   R10                 NO
         B     SELC#SEL            SELECTION SATISFIED
* ALL INPUT JOBS TO BE SELECTED
SELC#SLI DS    0H
         TM    FLGB,FLGB#OUT       IS IT THE OUTPUT JOB
         BOR   R10                 NO
         B     SELC#SEL            SELECTION SATISFIED
* SELECTIVE REQUEST CHECK
SELC#SLC DS    0H
         LM    R1,R2,GT#SEL+4      TABLE ADDRESS AND # OF ENTRIES
SELC#LP  DS    0H
         TM    SEL#FLG(R1),SFL#PRF PREFIX SPECIFIED
         BO    SELC#PRF
         TM    SEL#FLG(R1),SFL#CLS PREFIX SPECIFIED
         BO    SELC#CLS
SELC#LP1 DS    0H
         TM    SEL#FLG(R1),SFL#JBS JOBNUMBER SPECIFIED ONLY
         BZ    SELC#LPN
         CLC   SEL#JOB(8,R1),NJHGJNAM
         BNE   SELC#LPC
* JOBNAME FITS,CHECK IF ALL TO BE SELECTED OR NUMBER
         TM    SEL#FLG(R1),SFL#ALL ALL JOBS WITH THAT JOBNAME
         BO    SELC#SEL
         TM    SEL#FLG(R1),SFL#JBN IS JOBNUMBER ALSO GIVEN
         BZ    SELC#SNG            ONLY FIRST OCCURENCE TO BE SATISFIED
* CHECK THE JOBNUMBER
SELC#LPN DS    0H
         CLC   SEL#JBN+2(2,R1),NJHGJID
         BNE   SELC#LPC            NO,CONTINUE
         B     SELC#SEL            SELECT IT
* SINGLE JOBNAME SELECTED
SELC#SNG DS    0H
         TM    SEL#FLG(R1),SFL#STF
         BO    SELC#LPC            CHECK THE NEXT
         B     SELC#SEL            SELECT IT
* PREFIX JOBNAME SPECIFIED
SELC#PRF DS    0H
         XR    R3,R3
         IC    R3,SEL#PRL(R1)      PREFIX LN-1
         EX    R3,PRF#CLC          COMPARE IT
         BE    SELC#SEL            SELECT IT
         BNE   SELC#LP1            NO,CHECK JOBNAME/JOBNUMBER
* EXECUTION CLASS SPECIFIED
SELC#CLS DS    0H
         TM    FLGB,FLGB#OUT       IS IT THE OUTPUT JOB
         BO    SELC#LP1            YES DO NOT SELECT IT
         CLC   SEL#JOB(1,R1),NJHGJCLS
         BE    SELC#SEL            SELECT IT
         BNE   SELC#LP1            NO,CHECK JOBNAME/JOBNUMBER
* INDICATE THE JOB TO BE SELECTED
SELC#SEL DS    0H
         OI    FLGB,FLGB#SEL       SELECTION TO BE DONE
         OI    SEL#FLG(R1),SFL#STF
         OI    FLGB,FLGB#JSL       AT LEAST ONE SELECTED
         BR    R10
* NOTHING FOUND CHECK THE NEXT ENTRY
SELC#LPC DS    0H
         LA    R1,SEL#LEN(R1)
         BCT   R2,SELC#LP          CONTINUE
         BR    R10
PRF#CLC  CLC   SEL#JOB(0,R1),NJHGJNAM
         DROP  R11
         EJECT
*********************************************************************
*                                                                   *
*              EODAD FROM INPUT FILE                                *
*                                                                   *
*********************************************************************
EOD      DS    0H
* CHECK IF AVERYTHING COMPLETED
         CLOSE INDCB
         TM    FLGS,FLGS#SEL       WAS SELECT SPECIFIED
         BZ    EOD#0               NO
         TM    FLGS+1,FLGS#SDP     ANY PRINT/SELECT SPECIFIED
         BNZ   EOD#0               YES,OUTPUT NOT OPENED
         CHECK DECB3
         CHECK DECB4
         CLOSE OUTDCB
EOD#0    DS    0H
         LM    R3,R4,GT#IOI
         FREEMAIN R,LV=(R3),A=(R4)
         TM    FLGS,FLGS#SEL       WAS SELECT SPECIFIED
         BZ    EOD#1               NO
* REPORT THE SELECTION STATUS
         MVI   VTD,X'00'
         TM    FLGS,FLGS#SLI+FLGS#SLO
         BZ    EOD#RPS             GLOBAL SELECT SPECIFIED
* GLOBAL SELECT WAS REQUESTED
         TM    FLGB,FLGB#JSL       AT LEAST ONE SELECTED?
         BO    EOD#1               YES
         DRUKUJ VTD,R=LISTR1,L=6   EMPTY LINE
         MVC   LISTR(L'TC),TC      END OF FILE
         DRUKUJ VTD,R=LISTR1,L=L'TC+6
         B     EOD#1
EOD#RPS  DS    0H
         LM    R3,R4,GT#SEL+4      ADDRES&#OF ENTRIES
EOD#SRP  DS    0H
         MVI   LISTR-1,C' '
         MVC   LISTR(30),LISTR-1
         MVC   LISTR(8),SEL#JOB(R3)
         TM    SEL#FLG(R3),SFL#ALL ALL TO BE SELECTED
         BZ    EOD#SNA             NO
         MVC   LISTR+13(4),=CL4'ALL'
         B     EOD#SNP             DON'T PRINT THE NUMBER
* WAS THE JOBNUMBER SPECIFIED
EOD#SNA  DS    0H
         TM    SEL#FLG(R3),SFL#JBN
         BZ    EOD#SNP             NO
         PISZ  VPISZ1,SEL#JBN(R3),LISTR+10,FD=F,L=6
EOD#SNP  DS    0H
         TM    SEL#FLG(R3),SFL#STF SATISFIED?
         BZ    EOD#SNF             NO
         MVC   LISTR+20(9),=C'SELECTED '
         B     EOD#SPR             PRINT IT
EOD#SNF  DS    0H
         OI    FLGS,FLGS#ERR       ERROR
         MVC   LISTR+20(9),=C'NOT FOUND'
EOD#SPR  DS    0H
         DRUKUJ VTD,R=LISTR1,L=35
         LA    R3,SEL#LEN(R3)
         BCT   R4,EOD#SRP
         LM    R3,R4,GT#SEL
*        ABEND 001,DUMP
         FREEMAIN R,LV=(R3),A=(R4)
         CLOSE SYSIN
EOD#1    DS    0H
         DRUKUJ VTD,R=LISTR1,L=6   EMPTY LINE
         MVC   LISTR(L'T2),T2      END OF FILE
         DRUKUJ VTD,R=LISTR1,L=L'T2+6
         B     KOVO
*        END OF VOLUME
KOVO     DS    0H
         LA    R15,0
         TM    FLGS,FLGS#ERR       ANY ERRORS (SELECT OR CONTROL)
         BZ    WROC                NO
         LA    R15,RC#WRP          INDICATE
         B     WROC
* NO SYSPRINT DD
NOPRT    DS    0H
         LA    R15,RC#NSP
         B     WROC
* NO OPEN
NOPEN    DS    0H
         CLOSE PRINT
         LA    R15,RC#NSP
         B     WROC
* SYSIN NOT SPECIFIED
NODDNA   DS    0H
         MVC   LISTR(DK025),PK025
         MVC   LISTR+21(8),0(R2)
         DRUKUJ VTD,R=LISTR1,L=DK025+6
         LA    R15,RC#NSI
         B     WROC
* RETURN
WROC     DS    0H
* END OF PROCESSING
         ST    R15,GT#IOI+8
         MVC   LISTR(DK300),PK300
         MVC   LISTR+DK300(5),=C', RC='
         PISZ  VPISZ1,GT#IOI+8,LISTR+DK300+5,L=4,FD=F
         DRUKUJ VTD,R=LISTR1,L=DK300+15
         CLOSE PRINT
         WROC  SA=YES,RC=GT#IOI+8
         EJECT
* REGISTER SAVE AREA
SAVEAREA DS    18A(0)
*
* TEXTS
T1       DC    C'       JOBNAME   ##### C NODE     USERID   PGMN'
T2       DC    C'END OF UNLOADED JES2 SPOOL FILE'
T3       DC    C'END OF TAPE'
T4       DC    C'UNKNOWN BLOCK HEADER'
T5       DC    C'UNKNOWN BLOCK FORMAT'
T6       DC    C'JOB TRAILER MISSING'
T7       DC    C'TOTAL JOB RECORDS'
T8       DC    C'WRONG PARAMETERS PASSED'
T9       DC    C'**** INVALID CONTROL CARD,DISREGARDED'
TA       DC    C'TOO MANY CONTROL CARDS'
TB       DC    C'JOB SELECTED'
TC       DC    C'NO INPUT/OUTPUT JOBS FOUND'
TD       DC    C'NJE OFFLOAD HEADER'
TE       DC    C'BLOCK HEADER FOUND IN NON-MERGE FUNCTION'
WORK     DS    F
* EQUATES
NJE#HDR  DC    X'02000000'
NJE#EOJ  DC    X'01000201'
JOB#HDRO DC    X'01C00100'
JOB#HDRX DC    X'00C00100'
JOB#TRLO DC    X'01D00100'
JOB#TRLX DC    X'00D00100'
DSN#HDRO DC    X'01E00100'
DSN#HDRX DC    X'00E00100'
DSN#BLKO DC    X'01A00100'
         DC    X'01900100'
         DC    X'01800100'
DSN#BLKX DC    X'00800100'
* PROCESSING PARAMETERS FLAG BYTE
FLGS     DC    XL2'00'
FLGS#PRM EQU   X'01'               PARM SPECIFIED
FLGS#LST EQU   X'02'               LIST ONLY REQUESTED
FLGS#HEX EQU   X'04'               HEX DATA ON HEADERS REQUESTED
FLGS#SEL EQU   X'08'               JOB SELECTION REQUESTED
FLGS#MRG EQU   X'10'               MERGE OUTPUT REQUEST
FLGS#SLI EQU   X'20'               ALL INPUT JOBS TO BE SELECTED
FLGS#SLO EQU   X'40'               ALL OUTPUT JOBS TO BE SELECTED
FLGS#ERR EQU   X'80'               SELECT OR CONTROL CARD ERROR
* 2-ND BYTE
FLGS#SOU EQU   X'01'               OUTPUT OF THE SELECTED JOB TO BE
*                                  COPIED ONLY
FLGS#SDU EQU   X'02'               SELECTED JOBS TO BE DUMPED
FLGS#SSH EQU   X'04'               BEGINNING OF EACH SELECTED JOB TO
*                                  BE PRINTED
FLGS#PRT EQU   X'08'               LISTINGS OF THE SELECTED JOBS TO
*                                  BE PRINTED TO SEPARATE OUTPUT
FLGS#SDP EQU   FLGS#SDU+FLGS#SSH+FLGS#PRT COMPOSITE FLAG
* OFFLOAD DATA SET FLAG BYTE
FLGB     DC    AL1(0)
FLGB#JHD EQU   X'01'               JOB HEADER OCCURED
FLGB#OUT EQU   X'02'               JOB OUTPUT
FLGB#JST EQU   X'04'               JOB START
FLGB#FWR EQU   X'08'               1-ST WRITE INITIATED
FLGB#SWR EQU   X'10'               2-ND WRITE INITIATED
FLGB#JSL EQU   X'20'               AT LEAST ONE JOB SELECTED
FLGB#NJE EQU   X'40'               NJE HEADER OCCURRED
FLGB#SEL EQU   X'80'               JOB TO BE SELECTED
* AREAS
         DS    0H
LISTJRDW DC    XL4'00'
LISTJC   DC    CL1' '
LISTJ    DC    CL254' '
         DS    0H
LISTR1   DC    XL4'00'
         DC    CL2' '
LISTR    DC    CL132' '
         ORG   LISTR+5
JOB#TYPE DS    C                   INPUT OR OUTPUT
         DS    C
JOB#NAME DS    CL8                 JOBNAME
         DS    C
JOB#NUMB DS    CL6                 JOB NUMBER
         DS    C
JOB#CLS  DS    C                   JOB CLASS
         DS    C
JOB#NODE DS    CL8                 EXECUTION NODE
         DS    C
JOB#TSOI DS    CL8                 TSO SUBMITTER
         DS    C
JOB#PGNM DS    CL20                PROGRAMMER
         DS    C
JOB#HEX  DS    CL26                HEXADECIMAL BLOCK HEADER FORMAT
         DS    C
JOB#FLG  DS    CL4                 HEX FLG1 FLG2
JOB#END  DS    C                   FOR LENGTH COMPUTATION,MUST BE LAST
         ORG
JOB#RCDS DS    F                   TOTAL JOB RECORDS
APAR     DS    F                   ADDRESS OF THE PARMFIELD POINTER
NURIN    DC    F'0'                NUMBER OF THE PHYSICAL BLOCK (INP)
PRNTCNT  DC    F'0'                SYSOUT NUMBER
GT#SEL   DS    3F                  STORAGE GOTTEN FOR SELECT LIST
GT#IOI   DS    3F                  STORAGE GOTTEN FOR I/O-INPUT
GT#IOO   DS    3F                  STORAGE GOTTEN FOR I/O-OUTPUT
NUSPEC   DS    H                   SPECIFIED NUMBER OF RECORDS/BLOCKS
*                                  TO BE SHOWN/DUMPED
NUCURR   DS    H                   CURRENT BLOCK NUMBER DUMPERD
SAVLR    DS    H                   SAVE LRECL
SAVBL    DS    H                   SAVE BLSIZE
VERSTAMP DS    0CL8                VERIFICATION STAMP
VERSTIME DS    CL4                 VERIFICATION STAMP - TIME
VERSDATE DS    CL4                 VERIFICATION STAMP - DATE
CARRIAGE DS    CL1                 CARRAGE CONTROL FROM DATASET HDR
*                                  N - NO CARRIAGE CONTROL
*                                  X - ASA CARRIAGE CONTROL
*                                      MACHINE CARRIAGE CONTROL
*                                      AFPDS
* EXCHANGE BUFFERING WITH DOUBLE I/O OPERATIONS
B1       DS    2F                  1-ST PAIR OF BUFFERS FOR READ/WRITE
B2       DS    2F                  2-ND PAIR OF BUFFERS FOR READ/WRITE
* DRUB CONTROL TABLE
DRUBAD   DC    A(0)                DRUB ENTRY POINT
DRUTAB   DC    A(*+4)
         DC    A(BLKTAB)           STORAGE BLOCK DESCRIPTION
LINADR   DC    A(LISTR)            PRINT LINE ADDRESS
AVTD     DC    A(VTD)              VTD ADDRESS
APISZ1   DC    A(VPISZ1)           VPISZ1 SUBROUTINE
ACONH    DC    A(CONHEX)           CONHEX SUBROUTINE
BLKTAB   DC    A(0)                BLOCK ADDRESS
BLLEN    DC    A(BLKL)             BLOCK LENGTH
* SELECTION RECORD LAYOUT
SEL#JOB  EQU   00                  JOBNAME
SEL#JBN  EQU   08                  JOB NUMBER
SEL#FLG  EQU   12                  JOB FLAGS
SEL#PRL  EQU   13                  PREFIX LN-1
SEL#RSV  EQU   13                  2 BYTES RESERVED
* SELECTION FLAG MEANING
SFL#ALL  EQU   X'80'               ALL JOBS WITH JOBNAME TO BE SELECTED
SFL#XXX  EQU   X'40'
SFL#OUT  EQU   X'20'               OUTPUT CLASS FOR JOB TO BE SELETED
SFL#JBN  EQU   X'10'               ONLY JOB NUMBER SPECIFIED
SFL#JBS  EQU   X'08'               JOBNAME SPECIFIED
SFL#PRF  EQU   X'04'               PREFIX SELECT REQUEST
SFL#CLS  EQU   X'02'               EXECUTION CLASS SELECT REQUEST
SFL#STF  EQU   X'01'               SELECTION REQUEST SATISFIED
SEL#LEN  EQU   16                  LENGTH OF THE RECORD
SEL#QTY  EQU   100                 NUMBER OF RECORDS SUPPORTED
* LIST FORMS
RD1      READ  DECB1,SF,INDCB,,'S',MF=L
RD2      READ  DECB2,SF,INDCB,,'S',MF=L
WR1      WRITE DECB3,SF,OUTDCB,,'S',MF=L
WR2      WRITE DECB4,SF,OUTDCB,,'S',MF=L
* DCBS
INDCB    DCB   DDNAME=SYSUT1,DSORG=PS,MACRF=R,NCP=2,                   C
               RECFM=U,EODAD=EOD,BLKSIZE=4042
OUTDCB   DCB   DDNAME=SYSUT2,DSORG=PS,MACRF=W,NCP=2,                   C
               RECFM=U,BLKSIZE=4042
PRINT    DCB   DDNAME=SYSPRINT,MACRF=PM,RECFM=VBA,LRECL=137,           C
               DSORG=PS,EROPT=ACC,EXLST=PRTEXL
LISTG    DCB   DDNAME=PRINTOUT,MACRF=PM,RECFM=VBA,LRECL=259,           C
               DSORG=PS,EROPT=ACC,EXLST=PRTEXL
         DCBPREF BLKSIZE=80
SYSIN    DCB   DDNAME=SYSIN,MACRF=GL,RECFM=FB,LRECL=80,                C
               DSORG=PS,EROPT=ACC,EXLST=PRTEXL,EODAD=RDC#EOD
         KOMU  SPOOLSEL,KOM=(025,200,203,300)
* EXIT LISTS
PRTEXL   EQU   *
         DC    XL1'85',AL3(DCBEX)
         LTORG
* SVC99 SYSOUT ALLOCATION
         DS    0D
S99RBPTR DC    A(S99RB+X'80000000')
S99RB    DC    X'14'                   LENGTH OF REQUEST BLOCK
         DC    X'01'                   VERB CODE - ALLOCATE
         DC    XL2'00'                 FLAGS
S99ERROR DC    XL2'00'                 RETURNED ERROR
S99INFO  DC    XL2'00'                   IF ALLOCATION FAILS
         DC    A(S99TUPTR)             POINTER TO TEXT UNITS
         DC    XL8'00'
*
S99TUPTR DC    A(S99T1)                ADDR OF DDNAME TEXT UNIT
         DC    X'80',AL3(S99T2)        ADDR OF SYSOUT CLASS TEXT UNIT
*
S99T1    DC    X'0001'                 SPECIFY DDNAME
         DC    X'0001'                 ONE PARAMETER
         DC    X'0008'                 LENGTH
S99T1NAM DC    CL8'PRNT0000'           ACTUAL DDNAME
*
S99T2    DC    X'0018'                 SPECIFY SYSOUT CLASS
         DC    X'0001'                 ONE PARAMETER
         DC    X'0001'                 LEN=0 IS DEFAULT
         DC    C'Q'                    SET FOR SYSOUT=Q IF LEN=1
         PRINT GEN
VTD      VTD   VDRUKV,PRINT,FD=137,WJ=A,SW=(40,'SPOOLSEL(KB) - JES2/SP C
               OFFLOADED SPOOL FILE UTILITY')
DCBEX    DCBEX DCBPREF,L=*,B=*,R=*
         JFCBDEF
         DCBDEF
NUREC    EQU   10                  NUMBER OF RECORDS TO BE SHOWN
BLKL     EQU   4042
* RETURN CODES
RC#NSP   EQU   04                  SYSPRINT NOT SPECIFIED/OPEN FAILED
RC#WRP   EQU   08                  WRONG PARAMETERS
RC#NSI   EQU   12                  SYSIN MISSED
CONHEX   CONHEX
VPISZ1   VPISZ
VCZYT    VCZYT
         COPY   VDRUKV
         $HASPEQU
         $NHD
         END    SPOOLSEL
